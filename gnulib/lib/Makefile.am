## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Automake, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Invoked as: gnulib-tool --import --dir=. --lib=libgnulib --source-base=gnulib/lib --m4-base=gnulib/m4 alloca argmatch dirname error fileblocks fnmatch-gnu getline getopt human idcache lstat malloc memcmp memset mktime modechange pathmax quotearg realloc regex rpmatch savedir stat stpcpy strdup strftime strstr strtol strtoul strtoull strtoumax xalloc xalloc-die xgetcwd xstrtol xstrtoumax yesno human filemode getline stpcpy canonicalize mountlist closeout
# Reproduce by: gnulib-tool --import --dir=. --lib=libgnulib --source-base=gnulib/lib --m4-base=gnulib/m4   alloca alloca-opt argmatch atexit canonicalize closeout cycle-check dirname error exit exitfail extensions fileblocks filemode fnmatch fnmatch-gnu fpending getcwd getline getopt gettext gettimeofday human idcache lstat malloc memcmp mempcpy memset mktime modechange mountlist path-concat pathmax quote quotearg readlink realloc regex restrict rpmatch savedir stat stdbool stpcpy strdup strftime strstr strtoimax strtol strtoll strtoul strtoull strtoumax time_r tzset xalloc xalloc-die xgetcwd xreadlink xstrtol xstrtoumax yesno

AUTOMAKE_OPTIONS = 1.5 gnits no-dependencies

noinst_LIBRARIES = libgnulib.a

libgnulib_a_SOURCES =
libgnulib_a_LIBADD = @LIBOBJS@
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

## begin gnulib module alloca


libgnulib_a_LIBADD += @ALLOCA@
## end   gnulib module alloca

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create an <alloca.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnulib_a_OBJECTS): $(ALLOCA_H)
alloca.h: alloca_.h
	cp $(srcdir)/alloca_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

## end   gnulib module alloca-opt

## begin gnulib module argmatch

libgnulib_a_SOURCES += argmatch.h argmatch.c

## end   gnulib module argmatch

## begin gnulib module canonicalize

libgnulib_a_SOURCES += canonicalize.h canonicalize.c stat-macros.h

## end   gnulib module canonicalize

## begin gnulib module closeout

libgnulib_a_SOURCES += closeout.h closeout.c

## end   gnulib module closeout

## begin gnulib module cycle-check

libgnulib_a_SOURCES += cycle-check.c cycle-check.h dev-ino.h

## end   gnulib module cycle-check

## begin gnulib module dirname

libgnulib_a_SOURCES += dirname.h dirname.c basename.c stripslash.c

## end   gnulib module dirname

## begin gnulib module exit

libgnulib_a_SOURCES += exit.h

## end   gnulib module exit

## begin gnulib module exitfail

libgnulib_a_SOURCES += exitfail.h exitfail.c

## end   gnulib module exitfail

## begin gnulib module filemode

libgnulib_a_SOURCES += filemode.h filemode.c stat-macros.h

## end   gnulib module filemode

## begin gnulib module fnmatch

BUILT_SOURCES += $(FNMATCH_H)
EXTRA_DIST += fnmatch_.h fnmatch_loop.c

# We need the following in order to create an <fnmatch.h> when the system
# doesn't have one that supports the required API.
all-local $(libgnulib_a_OBJECTS): $(FNMATCH_H)
fnmatch.h: fnmatch_.h
	cp $(srcdir)/fnmatch_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += fnmatch.h fnmatch.h-t

## end   gnulib module fnmatch

## begin gnulib module fpending

libgnulib_a_SOURCES += __fpending.h

## end   gnulib module fpending

## begin gnulib module getcwd

libgnulib_a_SOURCES += getcwd.h

## end   gnulib module getcwd

## begin gnulib module getline

libgnulib_a_SOURCES += getline.h
EXTRA_DIST += getndelim2.h getndelim2.c

## end   gnulib module getline

## begin gnulib module getopt

BUILT_SOURCES += $(GETOPT_H)
EXTRA_DIST += getopt_.h getopt_int.h

# We need the following in order to create an <getopt.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnulib_a_OBJECTS): $(GETOPT_H)
getopt.h: getopt_.h
	cp $(srcdir)/getopt_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

## end   gnulib module getopt

## begin gnulib module gettext

libgnulib_a_SOURCES += gettext.h

## end   gnulib module gettext

## begin gnulib module human

libgnulib_a_SOURCES += human.h human.c

## end   gnulib module human

## begin gnulib module idcache

libgnulib_a_SOURCES += idcache.c

## end   gnulib module idcache

## begin gnulib module mempcpy

libgnulib_a_SOURCES += mempcpy.h

## end   gnulib module mempcpy

## begin gnulib module modechange

libgnulib_a_SOURCES += modechange.h modechange.c

## end   gnulib module modechange

## begin gnulib module mountlist

libgnulib_a_SOURCES += mountlist.h

## end   gnulib module mountlist

## begin gnulib module path-concat

libgnulib_a_SOURCES += path-concat.h path-concat.c

## end   gnulib module path-concat

## begin gnulib module pathmax

libgnulib_a_SOURCES += pathmax.h

## end   gnulib module pathmax

## begin gnulib module quote

libgnulib_a_SOURCES += quote.h quote.c

## end   gnulib module quote

## begin gnulib module quotearg

libgnulib_a_SOURCES += quotearg.h quotearg.c

## end   gnulib module quotearg

## begin gnulib module regex

libgnulib_a_SOURCES += regex.h

## end   gnulib module regex

## begin gnulib module savedir

libgnulib_a_SOURCES += savedir.h savedir.c

## end   gnulib module savedir

## begin gnulib module stat

libgnulib_a_SOURCES += stat-macros.h

## end   gnulib module stat

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)
EXTRA_DIST += stdbool_.h

# We need the following in order to create an <stdbool.h> when the system
# doesn't have one that works.
all-local $(libgnulib_a_OBJECTS): $(STDBOOL_H)
stdbool.h: stdbool_.h
	sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

## end   gnulib module stdbool

## begin gnulib module stpcpy

libgnulib_a_SOURCES += stpcpy.h

## end   gnulib module stpcpy

## begin gnulib module strdup

libgnulib_a_SOURCES += strdup.h

## end   gnulib module strdup

## begin gnulib module strftime

libgnulib_a_SOURCES += strftime.c strftime.h

## end   gnulib module strftime

## begin gnulib module strstr

libgnulib_a_SOURCES += strstr.h

## end   gnulib module strstr

## begin gnulib module time_r

libgnulib_a_SOURCES += time_r.h

## end   gnulib module time_r

## begin gnulib module xalloc

libgnulib_a_SOURCES += xalloc.h xmalloc.c

## end   gnulib module xalloc

## begin gnulib module xalloc-die

libgnulib_a_SOURCES += xalloc-die.c

## end   gnulib module xalloc-die

## begin gnulib module xgetcwd

libgnulib_a_SOURCES += xgetcwd.h xgetcwd.c

## end   gnulib module xgetcwd

## begin gnulib module xreadlink

libgnulib_a_SOURCES += xreadlink.h xreadlink.c

## end   gnulib module xreadlink

## begin gnulib module xstrtol

libgnulib_a_SOURCES += xstrtol.h xstrtol.c xstrtoul.c

## end   gnulib module xstrtol

## begin gnulib module xstrtoumax

libgnulib_a_SOURCES += xstrtoumax.c

## end   gnulib module xstrtoumax

## begin gnulib module yesno

libgnulib_a_SOURCES += yesno.c yesno.h

## end   gnulib module yesno


# Makefile.am ends here
